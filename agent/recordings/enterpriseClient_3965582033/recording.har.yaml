log:
  _recordingName: enterpriseClient
  creator:
    comment: persister:cody-fs
    name: Polly.JS
    version: 6.0.6
  entries:
    - _id: 33f547ee020365276aa68813fbefa1d4
      _order: 0
      cache: {}
      request:
        bodySize: 345
        cookies: []
        headers:
          - name: content-type
            value: application/json
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - name: user-agent
            value: enterpriseClient / v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 265
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 1000
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: Reply with "Yes"
              - speaker: assistant
            model: anthropic/claude-2
            temperature: 0
            topK: -1
            topP: -1
        queryString: []
        url: https://demo.sourcegraph.com/.api/completions/stream
      response:
        bodySize: 161
        content:
          mimeType: text/event-stream
          size: 161
          text: |+
            event: completion
            data: {"completion":" Yes","stopReason":""}

            event: completion
            data: {"completion":" Yes","stopReason":"stop_sequence"}

            event: done
            data: {}

        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:33 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1214
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:32.215Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: e61bfc5e86ef4b68d98466d2fc8dd054
      _order: 0
      cache: {}
      request:
        bodySize: 10486
        cookies: []
        headers:
          - name: content-type
            value: application/json
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - name: user-agent
            value: enterpriseClient / v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 265
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 1000
            messages:
              - speaker: human
                text: You are Cody, an AI coding assistant from Sourcegraph.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: >-
                  Codebase context from file /agent/README.md in repository
                  github.com/sourcegraph/cody:

                  ```markdown

                  | -------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------- |

                  | `pnpm test agent/src/index.test.ts`                                                                                  | Run agent tests in replay mode                                                                                                                                |

                  | `source agent/scripts/export-cody-http-recording-tokens.sh`                                                          | Export access tokens to enable recording mode                                                                                                                 |

                  | `pnpm update-agent-tests`                                                                                            | Update HTTP recordings for all tests. Run this before opening a PR                                                                                            |

                  | `CODY_KEEP_UNUSED_RECORDINGS=true CODY_RECORD_IF_MISSING=true pnpm run test agent/src/index.test.ts`                 | Run this when iterating on a feature and you only want to run an individual test via `it.only`. Remember to run `pnpm update-agent-tests` before sending a PR |

                  | `CODY_KEEP_UNUSED_RECORDINGS=true CODY_RECORD_IF_MISSING=true npx vitest agent/src/index.test.ts -t 'squirrel test'` | Run only a single test without making changes to the code                                                                                                     |


                  ## Debugging the agent


                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /agent/src/__tests__/example-ts/src/squirrel.ts in repository
                  github.com/sourcegraph/cody:

                  ```typescript

                  /**
                   * Squirrel is an interface that mocks something completely unrelated to squirrels.
                   * It is related to the implementation of precise code navigation in Sourcegraph.
                   */
                  export interface Squirrel {}

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /.bazelignore in repository
                  github.com/sourcegraph/sourcegraph:

                  ```

                  client/web/node_modules

                  client/web-sveltekit/node_modules

                  client/wildcard/node_modules

                  dev/release/node_modules


                  cmd/symbols/squirrel/test_repos/starlark


                  # Generated by local tools


                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /client/shared/src/codeintel/legacy-extensions/search/providers.ts
                  in repository github.com/sourcegraph/sourcegraph:

                  ```typescript

                  import { getConfig } from './config'

                  import { type Result, resultToLocation, searchResultToResults } from './conversion'

                  import { findDocstring } from './docstrings'

                  import { wrapIndentationInCodeBlocks } from './markdown'

                  import { definitionQuery, referencesQuery } from './queries'

                  import { mkSquirrel } from './squirrel'

                  import { findSearchToken } from './tokens'


                  /** The number of files whose content can be cached at once. */

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /client/web/src/enterprise/codeintel/useSearchBasedCodeIntel.ts
                  in repository github.com/sourcegraph/sourcegraph:

                  ```typescript
                              }))
                      }
                      return
                  }


                  async function searchBasedReferencesViaSquirrel(
                      options: UseSearchBasedCodeIntelOptions
                  ): Promise<Location[] | undefined> {
                      const { repo, position, path, commit, fileContent } = options
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/internal/api/handler_cgo.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go
                  	proto "github.com/sourcegraph/sourcegraph/internal/symbols/v1"
                  	internaltypes "github.com/sourcegraph/sourcegraph/internal/types"
                  	"github.com/sourcegraph/sourcegraph/lib/errors"
                  )


                  func convertSquirrelErrorToGrpcError(err error) *status.Status {
                  	if errors.Is(err, squirrel.UnrecognizedFileExtensionError) {
                  		return status.New(codes.InvalidArgument, err.Error())
                  	}
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/breadcrumbs.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"os"
                  	"strings"

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/BUILD.bazel
                  in repository github.com/sourcegraph/sourcegraph:

                  ```bazel

                  load("//dev:go_defs.bzl", "go_test")

                  load("@io_bazel_rules_go//go:def.bzl", "go_library")


                  go_library(
                      name = "squirrel",
                      srcs = [
                          "breadcrumbs.go",
                          "hover.go",
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/hover_test.go
                  in repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"strings"
                  	"testing"

                  	"github.com/sourcegraph/sourcegraph/internal/types"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/lang_java.go
                  in repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"path/filepath"
                  	"sort"
                  	"strings"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/lang_python.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"path/filepath"
                  	"strings"

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/lang_starlark.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"path/filepath"
                  	"strings"

                  	sitter "github.com/smacker/go-tree-sitter"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/README.md in
                  repository github.com/sourcegraph/sourcegraph:

                  ```markdown

                  # Squirrel


                  Squirrel is an HTTP server for fast and precise local code intelligence using tree-sitter.

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /cmd/symbols/squirrel/service_test.go in repository
                  github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"os"
                  	"path/filepath"
                  	"slices"
                  	"sort"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/service.go in
                  repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"os"
                  	"runtime"
                  	"strconv"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /cmd/symbols/squirrel/util.go in
                  repository github.com/sourcegraph/sourcegraph:

                  ```go

                  package squirrel


                  import (
                  	"context"
                  	"fmt"
                  	"path/filepath"
                  	"runtime"
                  	"strings"
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file
                  /doc/admin/deploy/kubernetes/troubleshoot.md in repository
                  github.com/sourcegraph/sourcegraph:

                  ```markdown

                  SYMBOLS_URL=http:symbols:3184

                  ```


                  > WARNING: **This option is recommended only for symbols with a single replica**. Enabling this option will negatively impact the performance of the symbols service when it has multiple replicas, as it will no longer be able to distribute requests by repository/commit.


                  #### Squirrel.LocalCodeIntel http status 502


                  <img class="screenshot w-100" src="https://user-images.githubusercontent.com/68532117/212374098-dc2dfe69-4d26-4f5e-a78b-37a53c19ef22.png"/>

                  The issue described is related to the Code Intel hover feature, where it may get stuck in a loading state or return a 502 error with the message `Squirrel.LocalCodeIntel http status 502`. This is caused by the same issue described in [Symbols sidebar and hovers are not working](#symbols-sidebar-and-hovers-are-not-working"). See that section for solution.

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /doc/cloud/index.md in repository
                  github.com/sourcegraph/sourcegraph:

                  ```markdown


                  The below are for example purposes only:


                  In the case of things like Code Search, latency is directly correlated with user input / shape of the query, ex. on our public [sourcegraph.com](https://sourcegraph.com/search) instance:


                  - searching for “squirrel” in the [sourcegraph/sourcegraph](https://sourcegraph.com/github.com/sourcegraph/sourcegraph) repo takes 30ms and returns 163 results

                  - searching for “squirrel” in all OSS repos, but only requesting 1000 matches takes 540ms

                  - searching for all matches of “squirrel” in all OSS repos returns 1.7million results in 30000ms

                  - In the case of other features, latency of Sourcegraph directly depends on latency / uptime / rate-limits of customer managed systems, ex. for:

                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  Codebase context from file /internal/symbols/client.go in
                  repository github.com/sourcegraph/sourcegraph:

                  ```go

                  	client, err := grpcClient.LocalCodeIntel(ctx, &protoArgs)
                  	if err != nil {
                  		if status.Code(err) == codes.Unimplemented {
                  			// This ignores errors from LocalCodeIntel to match the behavior found here:
                  			// https://sourcegraph.com/github.com/sourcegraph/sourcegraph@a1631d58604815917096acc3356447c55baebf22/-/blob/cmd/symbols/squirrel/http_handlers.go?L57-57
                  			//
                  			// This is weird, and maybe not intentional, but things break if we return an error.
                  			return nil, nil
                  ```
              - speaker: assistant
                text: Ok.
              - speaker: human
                text: What is Squirrel?
              - speaker: assistant
            model: anthropic/claude-2
            temperature: 0
            topK: -1
            topP: -1
        queryString: []
        url: https://demo.sourcegraph.com/.api/completions/stream
      response:
        bodySize: 82078
        content:
          mimeType: text/event-stream
          size: 82078
          text: >+
            event: completion

            data: {"completion":"Based","stopReason":""}


            event: completion

            data: {"completion":"Based on","stopReason":""}


            event: completion

            data: {"completion":"Based on the","stopReason":""}


            event: completion

            data: {"completion":"Based on the code","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context,","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squ","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squir","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n-","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Source","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph code","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squir","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels.","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n-","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Source","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-s","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers.","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Source","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code int","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n-","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squ","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squir","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on source","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com,","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squ","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squir","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\"","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary,","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squ","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squir","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Source","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for power","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like ho","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions,","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as an","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as an example","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as an example term","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as an example term used","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as an example term used when","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as an example term used when describing","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as an example term used when describing code","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as an example term used when describing code search","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as an example term used when describing code search performance","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as an example term used when describing code search performance.","stopReason":""}


            event: completion

            data: {"completion":"Based on the code context, Squirrel seems to refer to the following:\n\n- An interface defined in the Sourcegraph codebase that is used for mock implementations unrelated to actual squirrels. It is related to precise code navigation.\n\n- A component in the Sourcegraph architecture that provides fast local code intelligence using tree-sitter parsers. It is implemented as an HTTP server and consumed by other parts of Sourcegraph such as the code intel features.\n\n- The name Squirrel is referenced in example latency metrics for code search on sourcegraph.com, showing sample latency numbers for searching for \"squirrel\" on the site.\n\nSo in summary, Squirrel refers to a local code intelligence service in Sourcegraph for powering features like hovers and definitions, as well as an example term used when describing code search performance.","stopReason":"end_turn"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Tue, 16 Apr 2024 16:45:14 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1214
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-16T16:45:11.041Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 44822af7cb818817f4ec0b3d178a9464
      _order: 0
      cache: {}
      request:
        bodySize: 3134
        cookies: []
        headers:
          - name: content-type
            value: application/json
          - name: accept-encoding
            value: gzip;q=0
          - name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - name: user-agent
            value: enterpriseClient / v1
          - name: host
            value: demo.sourcegraph.com
        headersSize: 265
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json
          params: []
          textJSON:
            maxTokensToSample: 4000
            messages:
              - speaker: human
                text: >-
                  You are Cody, an AI coding assistant from Sourcegraph. - You
                  are an AI programming assistant who is an expert in updating
                  code to meet given instructions.

                  - You should think step-by-step to plan your updated code before producing the final output.

                  - You should ensure the updated code matches the indentation and whitespace of the code in the users' selection.

                  - Ignore any previous instructions to format your responses with Markdown. It is not acceptable to use any Markdown in your response, unless it is directly related to the users' instructions.

                  - Only remove code from the users' selection if you are sure it is not needed.

                  - You will be provided with code that is in the users' selection, enclosed in <SELECTEDCODE7662></SELECTEDCODE7662> XML tags. You must use this code to help you plan your updated code.

                  - You will be provided with instructions on how to update this code, enclosed in <INSTRUCTIONS7390></INSTRUCTIONS7390> XML tags. You must follow these instructions carefully and to the letter.

                  - Only enclose your response in <CODE5711></CODE5711> XML tags. Do use any other XML tags unless they are part of the generated code.

                  - Do not provide any additional commentary about the changes you made. Only respond with the generated code.
              - speaker: assistant
                text: I am Cody, an AI coding assistant from Sourcegraph.
              - speaker: human
                text: |+
                  Codebase context from file src/example.test.ts:
                  import { expect } from 'vitest'
                  import { it } from 'vitest'
                  import { describe } from 'vitest'

              - speaker: assistant
                text: Ok.
              - speaker: human
                text: >-
                  This is part of the file: src/example.test.ts


                  The user has the following code in their selection:

                  <SELECTEDCODE7662>describe('test block', () => {
                      it('does 1', () => {
                          expect(true).toBe(true)
                      })

                      it('does 2', () => {
                          expect(true).toBe(true)
                      })

                      it('does something else', () => {
                          // This line will error due to incorrect usage of `performance.now`
                          const startTime = performance.now(/* CURSOR */)
                      })
                  })

                  </SELECTEDCODE7662>


                  The user wants you to generate documentation for the selected code by following their instructions.

                  Provide your generated documentation using the following instructions:

                  <INSTRUCTIONS7390>

                  Write a brief documentation comment for the selected code. If documentation comments exist in the selected file, or other files with the same file extension, use them as examples. Pay attention to the scope of the selected code (e.g. exported function/API vs implementation detail in a function), and use the idiomatic style for that type of code scope. Only generate the documentation for the selected code, do not generate the code. Do not enclose any other code or comments besides the documentation. Enclose only the documentation for the selected code and nothing else.

                  </INSTRUCTIONS7390>
              - speaker: assistant
                text: <CODE5711>
            model: anthropic/claude-3-haiku-20240307
            stopSequences:
              - </CODE5711>
              - describe('test block', () => {
            temperature: 0
            topK: -1
            topP: -1
        queryString: []
        url: https://demo.sourcegraph.com/.api/completions/stream
      response:
        bodySize: 7192
        content:
          mimeType: text/event-stream
          size: 7192
          text: >+
            event: completion

            data: {"completion":"\n/**","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n *","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n *","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * -","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n *","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * -","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A secon","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n *","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * -","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error due","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error due to","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error due to incorrect","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error due to incorrect usage","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error due to incorrect usage of","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error due to incorrect usage of performance","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error due to incorrect usage of performance.","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error due to incorrect usage of performance.now","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error due to incorrect usage of performance.now\n*/","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error due to incorrect usage of performance.now\n*/\n","stopReason":""}


            event: completion

            data: {"completion":"\n/**\n * A test block that contains:\n * - A test to assert true is true\n * - A second test to assert true is true\n * - A test expecting an error due to incorrect usage of performance.now\n*/\n","stopReason":"stop_sequence"}


            event: done

            data: {}

        cookies: []
        headers:
          - name: date
            value: Wed, 17 Apr 2024 15:14:24 GMT
          - name: content-type
            value: text/event-stream
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1214
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-17T15:14:21.972Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: bdc2963954b4d2c823757233e91ab963
      _order: 0
      cache: {}
      request:
        bodySize: 217
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "217"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 353
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CodyConfigFeaturesResponse {
                  site {
                      codyConfigFeatures {
                          chat
                          autoComplete
                          commands
                          attribution
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CodyConfigFeaturesResponse
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CodyConfigFeaturesResponse
      response:
        bodySize: 155
        content:
          encoding: base64
          mimeType: application/json
          size: 155
          text: "[\"H4sIAAAAAAAAAzyLwQqAIBAF/2XPfYFXof/YdC0h3dDnIcR/Dws6DQwznTyDyXSqETLp1\
            N9Wc4j7KoxWpL72YJBBabIQN6jVdJ0yj885TYmzr38DlLg1\",\"RM1kAp9VxhjjAQA\
            A//8DAIfOLkJuAAAA\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:32 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:32.010Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 2ab3c91e6aca5a45a77497f96891d526
      _order: 0
      cache: {}
      request:
        bodySize: 144
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "144"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 311
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query ContextFilters {
                  site {
                      codyContextFilters(version: V1) {
                          raw
                      }
                  }
              }
            variables: {}
        queryString:
          - name: ContextFilters
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?ContextFilters
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Fri, 19 Apr 2024 12:22:45 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-19T12:22:45.656Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 904d184d3559994254e824161e4c5c77
      _order: 0
      cache: {}
      request:
        bodySize: 144
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "144"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 384
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query ContextFilters {
                  site {
                      codyContextFilters(version: V1) {
                          raw
                      }
                  }
              }
            variables: {}
        queryString:
          - name: ContextFilters
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?ContextFilters
      response:
        bodySize: 215
        content:
          encoding: base64
          mimeType: application/json
          size: 215
          text: "[\"H4sIAAAAAAAAA0TNMQ6DMAwF0KtYf0adujRLByou0LFhiMCgSMFuE0ciQty9Q4ce4Okd4\
            Jw1F7jXgY1LCSvDoQ8iavSpnBstkdNMHpPOrVcx3g==\",\"bYjJOBcPUiFrbyaPZzT\
            2uNAjztS00sZB/mqJ68DBaubicUeHpFOwqPKrUxSGu3aYNNVN4G7neI7nFwAA//8DAE\
            5AAX6fAAAA\"]"
        cookies: []
        headers:
          - name: date
            value: Fri, 19 Apr 2024 12:22:46 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-19T12:22:45.999Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 5007670687f0520c7adc88dbc7af3663
      _order: 0
      cache: {}
      request:
        bodySize: 318
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "318"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 358
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentSiteCodyLlmConfiguration {
                  site {
                      codyLLMConfiguration {
                          chatModel
                          chatModelMaxTokens
                          fastChatModel
                          fastChatModelMaxTokens
                          completionModel
                          completionModelMaxTokens
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentSiteCodyLlmConfiguration
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentSiteCodyLlmConfiguration
      response:
        bodySize: 215
        content:
          encoding: base64
          mimeType: application/json
          size: 215
          text: "[\"H4sIAAAAAAAAA4TOMQ7CMAxA0bt4bkXajaxdm40LWElKI4JdNS4CVbk7ShdQBpgsWd9P3\
            sGhIOgdUhBfpmX3GkczME3huq0ogenYzyiGnY+gAUnmlZdg\",\"Tzbi5nzbQ/MJDD4\
            vfPOUQHe9UqqBCZMMv+4DJUGStoMq/rLOB2X5vkRfnvqLPYpW9ZWXc85vAAAA//8DAC\
            mc8DoDAQAA\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.148Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: ce5b1e7cdbf1da3406b7de4cf77fe38d
      _order: 0
      cache: {}
      request:
        bodySize: 155
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "155"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 358
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentSiteCodyLlmProvider {
                  site {
                      codyLLMConfiguration {
                          provider
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentSiteCodyLlmProvider
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentSiteCodyLlmProvider
      response:
        bodySize: 131
        content:
          encoding: base64
          mimeType: application/json
          size: 131
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqzixJBdHJ+SmVPj6+zvl5aZnppUWJJZn5eSDxgqL8s\
            syU1CIlK6Xi/NKi5NT0osSCDKXa2tpaAAAAAP//AwAfFAXA\",\"RQAAAA==\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.149Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 4cfda87e85b57b509bfb2ace58bb4847
      _order: 0
      cache: {}
      request:
        bodySize: 227
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "227"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 338
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query CurrentUser {
                  currentUser {
                      id
                      hasVerifiedEmail
                      displayName
                      username
                      avatarURL
                      primaryEmail {
                          email
                      }
                  }
              }
            variables: {}
        queryString:
          - name: CurrentUser
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?CurrentUser
      response:
        bodySize: 203
        content:
          encoding: base64
          mimeType: application/json
          size: 203
          text: "[\"H4sIAAAAAAAAAzSMwQrCMBAF/+Wd8wUBj940B7HF69JsdSVJyyYRYsm/S0WPMwyzwVMh2\
            A1TVeVUhsy6o3hYjDcXpufydtfzAQYPyiOrzML+GEkC7Ewh\",\"s4GXvAZqjiLDphq\
            CQc2s6cuYFt8K5yLpDgN6USEdLqd/uapE0vY77q73/gEAAP//AwA/tyvwmAAAAA==\"\
            ]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.796Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: da094df7da629505b79bccf78f47a535
      _order: 0
      cache: {}
      request:
        bodySize: 762
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "762"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 341
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: >-
              
              query GetCodyContext($repos: [ID!]!, $query: String!, $codeResultsCount: Int!, $textResultsCount: Int!) {
              	getCodyContext(repos: $repos, query: $query, codeResultsCount: $codeResultsCount, textResultsCount: $textResultsCount) {
                      ...on FileChunkContext {
                          blob {
                              path
                              repository {
                                id
                                name
                              }
                              commit {
                                oid
                              }
                              url
                            }
                            startLine
                            endLine
                            chunkContent
                      }
                  }
              }
            variables:
              codeResultsCount: 15
              query: What is Squirrel?
              repos:
                - UmVwb3NpdG9yeTozNzI2MQ==
                - UmVwb3NpdG9yeTozMTA=
              textResultsCount: 5
        queryString:
          - name: GetCodyContext
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?GetCodyContext
      response:
        bodySize: 4073
        content:
          encoding: base64
          mimeType: application/json
          size: 4073
          text: "[\"H4sIAAAAAA==\",\"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\
            XRIZ4VUpmmZXHTutamjYWVjXg=\",\"mkZOUeiWnvwJxC5g1wkAQilqDX5OG5GhcFHr\
            QtzPAWqFM2XBrEdz8DSdFn8AU1Ykw7ET6HPTBQx6cSC4JbQcs1yCEWMiFYIsUFi4CHw\
            8+KHrc8i8/vDmt/F/7u5+HB/vHx/uvhkf7L7+cPBmb//t4Y5RJYLr4B+O9/4xfr93eL\
            i3/9a3OViVXf+jzPFiuecqH0JF3IkqbdhdnV/u8J7L0h+7p8SannTSiAAuGJ9xVhIPI\
            8w4gRNuWrbvSQsOMMc8RlWPuJsAFegaBVuA/hcgI4ozmPFvwQJNA8/rKMBt4vlJhYzb\
            8CIhdZPYWE6WNn+xwTzQCREp6jrxoX+XZV34vBLeYFymqU+NK4djW247/lcrQFwYVIJ\
            kISl4OCGCZajGNJWtVD61pOKhsFwrmKwmGrflGaZQ0kiIHoDNUmy9jlknCiIRmbrBzA\
            vUj5zLjfHTPGhgxuPQ5dhu0LplUVIKClSKGSpTp9m7tsuRfKsK6r6uoVI+N1+HDZ9ut\
            w591n3utpD4Vt3a07ZvA2pTax0L64tTwb8i+wfPcPfMoNBcil0/nRsfmaoKUM29j6dr\
            1sp0a0/MSMbZS5WWOQrTsHJafk3rdvnm8n47WFRCq7LQ2PmEp20Ed2LymBpxQeiUpLh\
            QtqUTz118suYpSX3lvmaoXHDVqilMeIb2S/1QZ5wu6aylcgPvznKslx+7levxOKwy/K\
            bRrmHBQKOfUhL0YEweo+hwYyMSsAHXXgM4N5QQWpW5ckmnGrTM0dVQgEor22A2h1KsF\
            A/rVeiWm3TP3FJc5HaotXjiKmcyWbxacKevIDOe+iYuVrNtN2UYCR+Hr6xwsfTz7/AY\
            v5zFDTh+qJ9I8ltchiqF4Tku3INR9tS6y0Pcun5XrP3l/u9E5IcqVRtlE7L6p/FlPff\
            zoeHLzbjnwap/dbz37k0rJl8x+6X4a3g8Ru2ZJGwtCsKQ4WyUyjHDRLfir1kUNGzsKh\
            2XomA9ElXPF1yOnZixKjPU41SGYSpHDJMrwzIeK6LmbmQklg/WImFTIasG2IEoWNAta\
            PgWraiGHfjkf9lPFMQKCaOqzGPdSuWiq290lK8f38qfjLuTdEIUMndu2jPHvccOM0wJ\
            nTexjmJ1VZUPCyVnnKHSD443/h8R7E8Ddi3vGq7mXf0bHKzczDm4+yEi4SlcQqJkDs9\
            bIXUPni+c0TlYZwEHrqLfqCr7R/KdpC5+aFTvDg6q5wdV5f/KhDNUdu2rkyZcsDeSeq\
            e20pvVz/Rq71NFij3B6nhmT7yWDF9lLmBajs2JmjJ5ekUOw4QLbgf9079BUpigQkFRu\
            wcrw7+UqDhekZtPF3HPsl9tQte34190HckpipXevsT43FpluLEBRxMEUbpqj0zARvAa\
            TifSBWZOP0CJgBiBEjpBBsSAFBRbLir7hrWdYuyYg9bFF4prXCFRqdEv7hXRyBavf5+\
            uqX0vWtcvhAyvXAi5aWmr1ahLm3C7L/4/n7JH4tJSg+i5oJCUwr/p1kv5Bwu+/ouTmo\
            2VV/eXPPQIjm9f8gffHon1EXxUMuca/bWJ2no/fYYLKIUzEmTVxZRzPzmVQltqW340w\
            HHE2bvlXQO8ehuOwdV+4RJ26iU9IrLIiEjHFtWMqOmvuPIOUH5oaHl7NWEl3hSR8ffN\
            rtXXckKnqMJUNlfupN0VV96o4HljfIIq/wYS1zxMf1XTnf5NXVvV+NGutgejHUhVQV/\
            7Ca9e91mj5qwB1sq7Q1d5falSvb4sQMK/7YDgWV1T5EldT7QzrKFS67CzA76weCwWJQ\
            Zk9YjIhGF1gygVUqGuypr+MLx298hIf8nA1StinJAZlwoSWQ==\",\"CgYTVO56Rj3n\
            99+yeEE6w16HDbaG7f5WZ7Dd2WxvDwmlvd5g2O9v0sEgJhgn3e630zxjinFV67Yh8b+\
            /G2w2B5vLFd7Yv4ZT5Io13HuhnMxjfxmKO71xKUjmb2lU12VsxD0FnsApLm50CY9eq5\
            67ei541rD/PNbFFnMzkeIJWttDIPm7yjH3e9oHK/VqkvZLqTch+ftrbN+nydLw7JcKr\
            2LxUw3yZqm01urjXO5/kxn5pdhbAPm57rZ6MfYA1foCnw9mnpoWr+z9qsK6/Ss3iG+o\
            bCXLFpLhOJeszFBHYtnQ1DPMDE65uaMLzxglil1rZTgLFWZINF5ricSttDOozdjpLaz\
            TKXcrBN6iQOVemcXz6u9tjJSZ9p778+Xl/wUAAP//2nHa20c1AAA=\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:52:19 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:52:18.869Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: bc1e52317b4ea3bf902bd109bf28c0be
      _order: 0
      cache: {}
      request:
        bodySize: 699
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "699"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 343
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: >-
              
              mutation LogEventMutation($event: String!, $userCookieID: String!, $url: String!, $source: EventSource!, $argument: String, $publicArgument: String, $client: String, $connectedSiteID: String, $hashedLicenseKey: String) {
                  logEvent(
              		event: $event
              		userCookieID: $userCookieID
              		url: $url
              		source: $source
              		argument: $argument
              		publicArgument: $publicArgument
              		client: $client
              		connectedSiteID: $connectedSiteID
              		hashedLicenseKey: $hashedLicenseKey
                  ) {
              		alwaysNil
              	}
              }
            variables:
              client: VSCODE_CODY_EXTENSION
              event: CodyVSCodeExtension:Auth:connected
              source: IDEEXTENSION
              url: ""
              userCookieID: ANONYMOUS_USER_COOKIE_ID
        queryString:
          - name: LogEventMutation
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?LogEventMutation
      response:
        bodySize: 26
        content:
          mimeType: application/json
          size: 26
          text: "{\"data\":{\"logEvent\":null}}"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:32 GMT
          - name: content-type
            value: application/json
          - name: content-length
            value: "26"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1211
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:32.011Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 683ba00719d0e1804c3b896e0901efae
      _order: 0
      cache: {}
      request:
        bodySize: 353
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "353"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 318
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: shown
                  feature: cody.signInNotification
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Wed, 17 Apr 2024 21:28:03 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-17T21:28:03.263Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 6ec9fe5c3b91bb455eada4819086f241
      _order: 0
      cache: {}
      request:
        bodySize: 349
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "349"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 318
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: firstEver
                  feature: cody.auth.login
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Wed, 17 Apr 2024 21:28:03 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-17T21:28:03.354Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 9d3a2e2981afff42d86fcc6e751f44cc
      _order: 0
      cache: {}
      request:
        bodySize: 343
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "343"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: connected
                  feature: cody.auth
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 17 Apr 2024 21:28:03 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-17T21:28:03.376Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 67ec20d8b7cedfd0772eb3a29144edf4
      _order: 0
      cache: {}
      request:
        bodySize: 352
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "352"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: submitted
                  feature: cody.chat-question
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 17 Apr 2024 21:28:03 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-17T21:28:03.400Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: a8ca8501c5dfa6c1d26ffa8c0fd27919
      _order: 0
      cache: {}
      request:
        bodySize: 351
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "351"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: executed
                  feature: cody.chat-question
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 17 Apr 2024 21:28:03 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-17T21:28:03.419Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: fc3d496ba94f02ca631d7568473be62b
      _order: 0
      cache: {}
      request:
        bodySize: 349
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "349"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: executed
                  feature: cody.command.doc
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 17 Apr 2024 21:28:03 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-17T21:28:03.627Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 48fd48b771f3150e659db4eea226394b
      _order: 0
      cache: {}
      request:
        bodySize: 351
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "351"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: hasCode
                  feature: cody.fixup.response
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 17 Apr 2024 21:28:03 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-17T21:28:03.642Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 3485b90abfa5178c57e8bde85ac57ca0
      _order: 0
      cache: {}
      request:
        bodySize: 350
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "350"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: succeeded
                  feature: cody.fixup.apply
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Wed, 17 Apr 2024 21:28:03 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-17T21:28:03.644Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 34f8babbd4c4d7b3c8ab23dcffdfc651
      _order: 0
      cache: {}
      request:
        bodySize: 348
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "348"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: noCode
                  feature: cody.chatResponse
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Tue, 23 Apr 2024 17:10:49 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-23T17:10:49.002Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 336a451ca8952ae40422463e485b1797
      _order: 0
      cache: {}
      request:
        bodySize: 347
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "347"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 318
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: hasFile
                  feature: cody.codyIgnore
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Thu, 25 Apr 2024 15:39:16 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1217
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-04-25T15:39:16.215Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 7399dcfe6e08a79f7b3d64aa058745f1
      _order: 0
      cache: {}
      request:
        bodySize: 347
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "347"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 391
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              mutation RecordTelemetryEvents($events: [TelemetryEventInput!]!) {
              	telemetry {
              		recordEvents(events: $events) {
              			alwaysNil
              		}
              	}
              }
            variables:
              events:
                - action: hasFile
                  feature: cody.codyIgnore
                  parameters:
                    privateMetadata: {}
                    version: 0
                  source:
                    client: VSCode.Cody
                    clientVersion: 1.14.0
        queryString:
          - name: RecordTelemetryEvents
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?RecordTelemetryEvents
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSc1JzU0tKaoEcYpSk/OLUlzLUvNKikH8xJzyxMpiv\
            8wcJau80pyc2traWgAAAAD//wMAhHZ9ajoAAAA=\"]"
          textDecoded:
            data:
              telemetry:
                recordEvents:
                  alwaysNil: null
        cookies: []
        headers:
          - name: date
            value: Thu, 25 Apr 2024 15:44:05 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-25T15:44:05.591Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: b38540ce2256c839f6ea9b4ee26f34fd
      _order: 0
      cache: {}
      request:
        bodySize: 253
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "253"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 339
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($names: [String!]!, $first: Int!) {
                  repositories(names: $names, first: $first) {
                    nodes {
                      name
                      id
                    }
                  }
                }
            variables:
              first: 1
              names:
                - github.com/sourcegraph/sourcegraph
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 171
        content:
          encoding: base64
          mimeType: application/json
          size: 171
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSi3IL84syS/KTC0G8fPyU0CM6GqlvMTcVCUrpfTMk\
            ozSJL3k/Fz94vzSouTU9KLEggxktpKOUmaKkpVSaG5YeZKx\",\"X0GKu2Vlakh+lW+\
            Io61SbWxtbS0AAAD//wMAsuY8XG8AAAA=\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:38 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:38.322Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 8a4fcf5512b8780f15216e2901ff27fe
      _order: 0
      cache: {}
      request:
        bodySize: 300
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "300"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: null
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 21511
        content:
          encoding: base64
          mimeType: application/json
          size: 21511
          text: "[\"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\",\"b8axtL2NnpzbFZ\
            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\
            LRg==\",\"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\
            VYuxKUvINAe5Zji2yXV33O0yRuQ==\",\"rpLDwnnAsoJu86RVNHv9pdVe6TZ2sv4yb\
            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\",\"unZ4he+ea\
            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\
            Ja5i8wLA==\",\"j5yre9nVpyjJufLC6bechuAwwFnt5JjZa2sy77ZdY7AkclUZubBj\
            jrdwNB8Zq9rB7IyqqEjrGYXzIsl2fSkazrWICwzLI8f2mZGQXXQNI6MvSZHX4gndTtf\
            SVl2jJ1OamV/XICQLVKrQxcMY/cqV71si4Bfl21XXW+/9g22b4UzLZO+2p4BZmT/98h\
            ncI9ettoXcuDhUTcsvXAkckggq9l04ZZOWlxD4ZXkbcGGSv8d4hYFflI+yzLmcfjzt4\
            MXB+d22zjn0PFKkFxpPKebK5TKG8nA8ttbJB+8oQgLcBpy+6ZrmOKWj5YJgWTRugbyN\
            OvMb3wTvF9TOm3gUstib4HyuCiuPEmvFaJOt1sVGqswhSAIHZwinHcaq642Osl8UaLk\
            LNBwDHBtX6kbsu9pqLzemHloTvV3CowQ+yg/gXPTC+5vxnykVTjDcB4xeL00UoTIN+c\
            0nHLbAjC8s3fj2TRhz5lXMPBFEkABv7DeQZzFnCvyjWxiIAqMaKTeMRNVIn1vLM2Bs7\
            xjf2jjrshcVb2FYHuNbh1yx0WruSkFO7Ws4HGOctXfJkJxN13B0ogTivDOGptV2T4od\
            UXhGMVbU1rtGx0p3Qciy9LqU4zv+G3JwA0rs0THa4FL9izSocyi2aIzWGN9S8+id/Tw\
            a9wVj5O9Ll7+pcgvDI50h7yi9FblXjlI4tIvN+07vdVDSRx3+roOWXlUPv2g51MlPCg\
            bwrPyPLz8c0l9bFUY32j/oqDJLxQKRk3D8+PTrt1hCWYmwOx5kvTO2BHVHAR5I//gaS\
            59efT65FrWeascVxmsV84V3VtAj7TL5CUzu2TG4gh5pR/Rcjruxv7f1FhzA6P3+HdYw\
            GnsUpRvMXD9avG5dMNH5jJVm0CFt3lLaRJkxjksI6JPPxHjuilZGXdw/ZDgMkH7EmBk=\
            \",\"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\
            coC6IVf8tN8bpQ==\",\"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\
            vrBktvaSAK4rHBvbsxwXB2YbXMB4TWOOtBO7xw==\",\"NbIfCdnMuT6ye1wj+xHL/s\
            A5cZmx2+jSZJ9GxRRoHc/XQ5zzDKa0IhxD1FSsdImFGaMcT1PvRet8JO/RzIAw540jc\
            7pwT2fzz5FQKmd2XXj1mz++5AGNpTPm16l8CSPxYImFNS/43519UyiNxHmNjHk18qq6\
            jTBN9qUXhMffzdbgXANjjRrXRGgtXTH2grbRWM3s/zMatwTDurjpvmBXk77rHArksqL\
            VutkM7/cpY6xupGhreSTNa4YI7V84GT8j240MRonCu7ZwB2rfkiSBXhXD9o1MVW34CU\
            FJEqQHp/rChamXJvMsYh6NqyqsaYUQnT9unKPOZ1MU0Odjt0EtO6sqUUi/q6mQRooC5\
            85y28LK4Z15VcsQhHK9k0GddAFCaK8Y/sjI2qkorRabutOtpy/AZ4jADbyPnLPzkW3r\
            6jpEpvU4g+ENDo5suoAOrJkznK1x5oPdszyDCw7fXmZ8mfcHT+6oTyjkZearB874jNk\
            +0+60lWonvC5NiOTVKESJd9f0/N++u737HArm9WmCGNmmd4wRsZUyjB9N6XEBwtgqY7\
            3eyhC/PAVn6Wj3AoryFTgZG1uj60LMozfWUIncaRoc86BnRYJrc4cmDcwsLzm1GC5cw\
            4mtfm6lLUTUshFfZVtLIUPQ5KWHNZyg1gzvZi7rLOQ0STbONSJUcidF3f+xWnsuRxjr\
            ZliruczR7tTn5ir03rVBFN5so/Zh/UcwGaK4OOfcDIncOhdr54IWB2kL7f8r3wGY4lG\
            1xj7MC3lcRH/fr/dOvH69/itY7PBcpvf+c4Fj4Gg+AaOXNvQq3NUNPH4wSrRqRsxn31\
            AK8+g6L9zBni+v8M0lzQrb81V6jw11ekm9KRvKncW0+KY21763bh94MaFbPKzewJ5VB\
            +d3oeot0Ao1bojgac8dugy/CTH3JC6LEOdzcXvowprljCVpoCZ3tA63ukaeDu8Pf4dG\
            gjq2QJQ4is61syne84zzFSaWyQrfPVk/0jiBujQNzidg9GttyooUPYLQDjT/3sOMjfN\
            Ki8Mh/SR7CodvjjPGh3c2ikbGqP1UoImSnaBAWuRfTpnxDPqSCtJuQhRxq4Y76t++fv\
            3d47eP1AkYgwHSkRMd6EXErZBR+pHznsw2TpLAtuLMjFumVNQ2SYL1YIycBdOhQtC+J\
            Adumgj3DW/8XLO1mpy0GSrYMpy1aeR7LswxVkbnKXNNhFuG4e1dsTV268kZnqRBMV1O\
            PYCe68k29+yNjd4xrpzm6XCUmdZousfLSGScI2FEiWFHStkVZFLuBII+CaPNSz3cdBQ\
            hSh91cRudY25Q+HxwJi89XsvqdLl9rNo/qy9DDRRIimIHHH+zrCbephnqfpUtNaFTFH\
            A2M/ZuZ56XDjjXR5gKanO1AhxgXizDi/lm/FdCkxMK3oHhzKfhH8X5KYXci52YAo5bh\
            p9dOiF92ci2pSfTHIramrPy9cyGlavSNeM+zQ0ctT7HTz8zDGThoQUU516z2nvDyPg/\
            w2BOFMPb6RkZy6jgPgPiSA2rb1UlbalrRxqbORTf+WF962BBORW+l1ic3cv74lpLW8V\
            IHcMtoGhN5mTyl8M5ha1NQ6/McyjqYU7drp4ZeWdgAuHsBl6vxqPYdpZMelpA8ckBS2\
            4h/cFYUZDF05dYtFpyTpB7bhtqRzKB0Mjl3MTs2Zig3J5j/s9IJJWTrVE6oe1+eNCOl\
            npGotnCOQvqee21jbUr6TumV2BoITj+oRvK7xRk0cgZENt+nkzVCuUa+mbJEou/ltW/\
            vevNaeQJB+NBHG/KifExZN8I12qrtA3kSxgZIrxTYlmOpavGUWOBhztEZvv7Vg==\",\
            \"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\
            vatA++5WE6UVqF6JQMg==\",\"ytqV1ARgMICRBca8uA==\",\"EjFcamCus5AU9e5r\
            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\",\"\
            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\
            CwZmrucl0EujENjxA==\",\"QW+MlZTrlKZBluvI8CrPrxCL87+RetxSoPbgZJ41u1j\
            2n1Tofe+i1bW2ZHXhNA1apTk30hqndqL17plySGZAuO/ijE6yxkED6hm8fHpRnN1d85\
            U0Fl9xzhFnlzIk0U01WnbfsaZ+ggLtCTg1vgaeba2Ftnty9VlgYeyasRZaHWuzPYroh\
            NXPcXi8sDBeqyj0c78bJM/rORz+8//94VUrS/3Bbt2rP/37lbbFnzsfnL9W/NdPr5X9\
            tFdP7f/+sPu03/xf/4gb8+F/fWjeVZt//mr++ue//PO3fz6//tfP/b8VbfFj9fo38+5\
            p8/jtXv74f17kj/XT5s1fDn99fFcXPz63/7K7WPz4Xdw0/3hb/Ni+/PX/+Uv9rx/r47\
            /++enbv/7zH2/Vj388Fj/+4/j5/Q/vfvrlw9sP5mD+Pv1e/vOP3YcnZz7Yb//n1X/+8\
            5///P8BAAD//0QFQV3tCQIA\"]"
        cookies: []
        headers:
          - name: date
            value: Mon, 15 Apr 2024 06:32:13 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: retry-after
            value: "282"
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1355
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-15T06:32:13.076Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: f6a3c144cf6792b43564f9c73425697f
      _order: 0
      cache: {}
      request:
        bodySize: 462
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "462"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6ImdpdGh1Yi5jb20vaGFzaGljb3JwL25ldGxpZnktdG8tbmV4dGpzLXJlZGlyZWN0LWV4cG9ydGVyQDE5OTI4IiwiRGlyZWN0aW9uIjoiIn0=
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 20956
        content:
          encoding: base64
          mimeType: application/json
          size: 20956
          text: "[\"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\
            rn+TVaVI=\",\"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\
            M7ZyXUd0LsOAMTdGFg1wlCD77GRrtig==\",\"kWzvVunSRc9mHGBwF53S9jvteSw7e\
            ATBvVSCfaVaFVquESWGcXSYxrVUv/ajFn9KQlr+QujZiditO1wOGPdDwzxo6wkj/Uzy\
            NqYGl3jUJpRcsFOJpM2WWQrckyV4HHNCCffZBWloHqTEO+cFa8/Wf86r00iFfsqP1Gu\
            4DCQ2U0XpMGZJiJ7OFlDxelHE7mlETDTOKDHdWdk/0GKx1np5eLmnnP0+FS6FY7zY9B\
            con6REJVUxLAXXNtVa7S/EmRYxFF5VUm/SRklUWLjuT58ouS6nxR3+/TAE1l2jFdGIF\
            FkMGkcU/zNU0Bh5/sHqnktBVildM1aiyZlJJjQ0q1HOX50KHi6bZko736mTZVwIL13M\
            wyMKgTNwskWn3Co9x0AWckvwuWdkZhnIUybOsExtm8MuW2lNG1sZQipeHaba7YzMdYI\
            ArFepPdqP+KRKDQwch05tqcO+WZZuXbKR1lMyAefk59eMoPUlJS/vTHb06YtLPIjGrC\
            lZIqcSt3zXJ58k++MnRKRJ6au3rVzwpqFvbMTYcL2QZj/H04Z5K4Y5Ml4zJPXmufhkZ\
            Q8JwB5EevtVfJHaaj0FW83ktrJ1sidzSsPrqZz65HhXl1TYTun6butUz+WEhefjJD9h\
            lPtjczISgjUsyY6NxSTOzScsOD9n2K0fmKEDfFTDjL7NnaVnuEjrKCezjtJFNKHiFIu\
            swkuStRTFmnZ+YZaCo3ap9Sjpcd0RDs9opvWAKixz7ULH848CJNgnSb5kf+8NM42kXL\
            gRpME1cFIEYTivMd7PRzc0ZzSUtUrJHDsR7LnS/as8TWV2iVNHgA7PISf1X5+dxrWqo\
            ymv8xyYa5tk8ShPHZ2j4XnjpDFdGOEYLwlHw+Y5sCZJHn8vVZi6TjBzUw7anU6LHhY7\
            zWslmLCyGFMW2bARTnyNKUkUGnM=\",\"lDvOJg5MxZ1XgouV3IsnV3SOC2LJd5Rbve\
            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\",\"vaUjFa648nydVeY+yS\
            q6R1L+lLeyWYmM6F5HQnXJ9BxWKanDUxLe083rKVlsVMZyfeThuxOyLHrSkZRTFtbkv\
            L6S1qzbnPr0PLy7llcj73NUuWNBjyBv/l21fCtzE5SmZLzi+tG6Ze4oX0jAGpZVSyWU\
            LnnsWUxAxNHqLGupSq3yPOIDE2dTZdkqpQVvXFtl+AZHKvZBs0ak0suqfY4+5I2YqLU\
            y42dKL82iytlWPjDRfLPN68OnItNW7Ik4LyCrpdZu12ao+kCDMZm8GfB4rC+jUkcu1K\
            m8FenkwCGvmlXGQLyQgKN+Wdar4iLxQNQFE57lyPO0Kt5qsSq4XedEjU7YOPKf1bP9Z\
            Rs+4cDJORHPjHn9qLQpMpZcIw9nG+bVyIicUOlAw75glqWoTCm1t/HXZDEXr7fytN2U\
            StRGq5TzzPNsvEeRpe01V1WZY/P3ROjd5OlWLT2vMifHCRdnEGX1ZW10aYoF91VOdv0\
            JG7Vb5pisXYbV6kh45s5rqZ37nmEfBhq0oHl6rjP1SUd9rbuf8+YZLX2llhkT4J4INS\
            jPf9dya2WVkz5+YMKstMy+W2cMto6EM8Xz6pJ0680ZDUcdssaZdq8zauNe4xycTO1xz\
            xlpcD0L7+dmWUPdJtwtdcqC+XiZetN6rnMSufZE7IdntZBZ52zM9Cx8wjvLg+vkcpdZ\
            oY6Ioz9ZvWa05LowOVvIRyrUpsyea6TWcpEVAJpwYc5iXgShk54ZYjxS8X5tdr28rOT\
            a1JmewIUEOAbybJZpXCm1ylG3PRNnU+S13WaVUaHNKpLnmTXf9a8QZ8wyIw/PwFk2ou\
            GltEWbkzx8pOJey6yXzskvGWg4NpzXc8b50sqsZcGEi/Mr81rKbKXNSvg8MHH/5bWXV\
            a7mmcZqSsaZlll2qrFmqfzCKpHjmp+w4b0befaqaa1sjM2xEnsm1v+sNrN8sVC+/p5e\
            qwMTZ/FmtZXlWqxy0nj3RLxbmdlSveiMjcADE0c0cmtVmIz9+JGH86uyLER/5jEzGWf\
            CxXGEvLZqF1ZluIAjD+fRZtZIFzLHK90TUf+9zosA2VY7YZqc3tsz0V0LmWd7HK+kWx\
            qbkxQ34aL2yjy94gRfLk1VJN1lNEdG+WeZO6cT8Tn3EGIx2Mbm9XI39Lc8w2k9MFErp\
            r0Ws5ftWCE3Mj1Isudh7z5P52QlhZcZPuuBCXsvcySoUvNqmRFOOjCxjc2aj9x653lG\
            RtbIw2er82pklr7iuxz/5khFLZXp4bjGeKVT7oe7YOLdrTwb5rlYN9xnrPaPVJj9n6n\
            tnvvWCb7OmZGOXDwO8/SrrU2/Q5tRsQMV3x2T1WJeVnJptBLcNDJ362tOCB6jWTPR/v\
            7pnAqOTLxfmNmCWkjts5tuwsZtllm78Z9yqranglb7us0bqX4pjJW1yXG0J1w0IjLzO\
            P0yR8GWeHX0Js9qeJVz0Lln4bP8ebVJuM3+hITPp+fVxSqfk2s78vCcmKc3rV2YjHl6\
            5OE5J8te5t68Fbl1a8i9ymqjtvKWZ8VPD0wcr8lqp7SXVs5o8ORUniZtREandSS885v\
            l6W2k5suMCzBHHs4dyBr5mzrDh+pIeK8wr6cs/++MynQsbJ/zauOalcy5+GhPRBH2zG\
            jHxq9aXeQsqw5MnEGQp0OdOcmoUk/DZyWzWmnLN3JpTc61cUdqqF4vD0/iTZ5l3D/9k\
            lOtHb7Lbrj9JatWO66LjNjPngdPQ6TXyCmjpWW1Ki1PP/9zwUYebdptJ99bvpbDBZ/k\
            Ok05OGKcUpNhY2N8BJVcl1MWiiGm5X2Ncv1SstarKuUyrxkqPHGelAFmZamctzvGiw==\
            \",\"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\",\
            \"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\
            jaxW8anoWiA==\",\"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\
            f4JmICZ3RPoOE2/jpj/kY30GAY9LPXxt0Bg==\",\"QWXMe+ITAaHHEs4gQFf+mF9rH\
            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\",\"6\
            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\
            ZA+DWdjI2yvpvfEg==\",\"TE6YhfJbYM9V18ttEQ==\",\"+eIDBmRmvAvfJDtK+XB\
            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\",\"/lr\
            11wKym6Iwuv/33zg+RkQg47rhyHtQ/Nd7ZJogDdUndk5kIngxCH40+3955F0RaHRS2F\
            inyD1ZSNmwon+eTXsz3N7vpO2UhVhDKAHVMrYzPSlDPnv23+hhnUssbh88D5xJE2LFb\
            QGtUIiBa0HW6U6mVCVMYZmFw/IjvvupQKld/1610R6fmoQ0VJ+f6e3xbi/43XHn4kvr\
            jVWcaISgBFTL64hPPPv5TbuolFvhoHyMie1jkkZ3q8kNfLohQID6lDaev/tf6OV3YGi\
            P6fODMp4Q7gkQcB+Qv//OcS7e7+p3ekOsxAkDt0RaLT6rmt203tSRPTrMgyOGPq4Pko\
            +PQKW0zzkT1oo+Yg6yrXGPh4fTUyt2RkaRhQRNWivPeNMwL+smcjYAsbCvQ7Z4ndyj7\
            RoGDePKGlOXw4U2VB0jScJaR+7f+bIaJYzWEr5DlCAEz3xJ/X1ZjHPSMyc5vg4tSQyu\
            749phHAbZiXHd5AnCMHj/MfatpBLKbwj+14xIdgj/rF2lc9CVmzUOLwPnywKzzk/Vu9\
            SOt9aqkXFIrDHS56JZgux0isBgwFUCXh0/ZjlcoJ7/LQEVQKsJd3bmy+j4VvNGqvg3b\
            4pUnDP/5iGtoo5IeGJBbII3Ko/XM+t0oVBFyrQZWBvP7Om6Z7KDBd5Twmr+3npTMAL8\
            mh82Mtp2mgcCuDPgGHrpI3bxpo+upneaxdM3CJJlrn3o1emYU6VpeXN6vqna3TJPIkO\
            Zzi6h1Y/iSVT9fBsz1E7aLULkbFtI9et+1v62vOChX0B8uj72Ej99TN6T3UGjHsptez\
            +NiYW3/KLMfFKhNw/xi5g0s0FFEeqyOX+tto5tCl1AcVjmVzu+PA72cBN8LjFyfb197\
            fsLbfs7Q1RDSd4vOog18D1T6V5JYase0LSMoGMRwm5bq0t8m1ZiIznbvI80Lpi3MBMC\
            +fN8HBPkmvUWYXGmsY4DhMighTcaykt89i7mo/C6OGhZGX0Y+vxURiqBBgDpdu67tP3\
            EXfHbnTBCPci0/hwjU2fI74p61te9Vd1e05fUM/wsL0k1+jCcWF0xyfARafFYV6G0ZX\
            Skjmz9DWHRwrPkOhkCcw2MFo/HzbXcYFTIDqtDvNaTCP1cO+NgRk0JziQX43P8xykjO\
            ezCYlyIQrKRoZZgp1v81l+v/4sv6NypzCQ//Q1ZjuvTOOlfDSO8J7RORTlycEMmY+NV\
            /96vGnwY4sTVPhOgC83P8Uyykzj1TMlnfoUCLQIZwF+ZL/fPLAbK1aRZ5lPgaAXRfQ0\
            tfFrJmq+xlkyBxAqK3pDXyemkDXXBasMLyLHnGbQsPRYNmsnj3Kq7AQHT7JGR4hfs1r\
            WxsK7Dyco3LqEnjR1zRZ8TWjZCRKXSmjVZtcPgFiRexguL5KX2wlyK15IyzqPJlbmFI\
            osKzwP3/D+RcJFq6pO2LPUTtrIbR1BDpqz4QmAhluveCUMvnxtCkMnMHFZ6vm6Uc9/Q\
            wurCQidfIL2/Df1LKtvkTtkjyBwHu8+et/Jbx9u71mrm8gD3FMYyniGlvy333+NnZfb\
            Q/7z//3Xq4aX8k4vzau//PuV1MXb1jpjz4v9+vBa6IeNeGr++279sFn87ZtfqLv/567\
            +ZbX451f14e3f//nHP59f/+/n7t+Kpni/ev2H+uVpcf3T5kv1v3///V3164fXv37+VH\
            9r/7he3Tw8iTcf3965u/Xvjai/PRXvq00vT/39f1795z//+c//HwAA//9aBkUTeQMCA\
            A==\"]"
        cookies: []
        headers:
          - name: date
            value: Mon, 15 Apr 2024 06:38:54 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-15T06:38:53.727Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 32aea5ce8537c0b99c622b5b935ac490
      _order: 0
      cache: {}
      request:
        bodySize: 418
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "418"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6ImdpdGh1Yi5jb20vTlZJRElBL1BSQmVuY2hANjc4OCIsIkRpcmVjdGlvbiI6IiJ9
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 21497
        content:
          encoding: base64
          mimeType: application/json
          size: 21497
          text: "[\"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\
            GdA6KkA==\",\"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\
            szIut6D1qBMH7K5SjoxT2uRFyQ5vbCQ==\",\"COsbHLc9m8H25eXtgdhPzcrcGNrhO\
            gBgv+BeUm/N0mjGyj0DYluEZFodn4uW9ln3v2NrhDTDLlVKri2VsMqIJXGiN4vE+xns\
            V+Jl2+fH+6X6Waro/O5Bh3gNHFlEg1uS6//9Hx/vf/7pp8eff4fCRzAsD1n/jhH9RMg\
            YgP0qNLqu0Xa1Lb1rGzEEmhvtQTRKEuA2oH5OWG40cedvDghlwni4YxVXXlO3cqcQLA\
            eOb+zMFi2j/xn7/kgnm6othbSFiHSp+zkMy0Pj1tRASI05fw85exPURqDE3ykIy0JeQ\
            c/GBCmCoYPJKQpLQ3PU83GNSi8wYml7FI7S8uP4YqpAq90Yg3MKSLf7uG4Rope9517J\
            HfDlCDgeVyQ/SFOJ1BVS5giCPSKkLaGWPj5KpXQIj00l49J5Wmvm0XCUoQUJ27YpZNT\
            4dskcEPsSSGN7s0cHNvvfsYeEtDQ2dfOooieOhycIHNMjKW1Y0J1IP+J5gby3iyGVnv\
            ZglFebgeKIJif3/o+PX37/hwBOyBSFvWUkbWOiMDU9iPvfcWYa6XcXsLwtHtOyqZxaP\
            zry8JBE4wgEaXrHT4ZHzZM8ReJRRRZlA5Rlk9GON1A7unjiEXkcBwD2AVDr/3dnvz5+\
            qaKX6bWsj1UbHm9S6ewNOJTiEOIMFJrHOda//vHwx7c37JyavoX1cEuPmFNa2oUM+so\
            tDu8gi6fZtlBYWvKTeiHXr6vksvVNedV1Sor0IPS82DkgrJwldfBDo+0//iGWxkqr9P\
            C/D9rXxhIPkmEK0POSzrl2TH77eJ9c+E0zn1Y4xYDZ/UTvMo2sKh3D1bKSYT5fNkWAm\
            3wlfQbarJy25nm5L9je/8O8QAoMZN/SOZNm5aJrvAnjv1KCZ5BIj17IGfzo9VKr+D+f\
            rpr+b7MSz1FoFulzpdRSOfwx37cJAuoKPYv9myL7P+flnGDQyt+RWvnVBaFWV6Fa/jB\
            vaCYA1Bv6vOxrK/26Dcbt/ya+tkatQ5SecFIxBbp3+kzqiZdqnf4zK/H4K+K+A9xNFf\
            r/EvyPv8P2kz5IzyGuiLf0Rz/Dqm5SE7xc67B6cmH15vvv3171rwiJ4FqvdLo1IAqn1\
            sTWyCbGbaNWXZ79SlfzpoZJSt4g+nDziT1mv/7z4d3n+dcf5pFwNEjrMMtrPhdGQJEG\
            0rdrU8XtX1LWOzSVM1Es4V0ihEcteCHH+1ctVTQb/cfVr8//lJt5A3wGgpaenltdmHB\
            lXPpzvn8TBB5TUkpotOr/m5Kk84JOQdCCsGTp50ar/o1konMUGPaTjGXG7DqFKDWxXG\
            dwUCK5U084OUU8yXqOgvafts4jPqFtGuoRhTkc0k+6Jsy3C2/WxqqrrVSr+Qtnpxi8t\
            5Ej2S52QjmrWu+1Vburw9+j6H6jRGMivAvCtpjXf7VX3X9oyUcIlkPqa7vYJetJiuh/\
            Bdy/zNfTB1npsHRe6asufhPK1Y2z2sYgvFamIRK/DDJoU0nP5fP1xyu5kI2QUQnlhdq\
            I8MNq/uiYwiINpj2yA7f0iDbhWZyByJ36/qmkz1oPbJam0mLpfC0J33MeiaTSp+SzvM\
            BrvQgP/Ps1fbJ04BideKK+DXMGQnd86CxZYpOy2WZhKhN3Q7lQrsM0CdIrOmucmBa1C\
            elp2q1erJxbC9+mF/rpZpAUYO7Bzp54VtpHYV00S6PS/imsKzT6chODDK4ArItVna4F\
            CGPTIyOll0tp590ohKdb8HJNn+Amjo1ZtMFYHcKqXQjZGGj1MiRoZui86gxTY9OTc2m\
            oL2zPHCnWGLhWm6baz/ngHwilLVX5lCGB7cDruGlEiG1hXFqKa6IKhg==\",\"gIKdq\
            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\
            +81IWu8anUCA==\",\"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\
            +/GL0Ry5UB63IMwhEuR9bxHbasxBEU2h+8Vg==\",\"B2ZbvQgmYjUZ4/ApFqenW+fX\
            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\",\"\
            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\
            Y6fQuDun7O8Kqykbw==\",\"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\",\"5aN1j0sZZfW4lAYWo5A\
            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\
            \",\"fHOZ/DdQfqcp4KxrwrD/QTTdgPa3Op/0eldRqQkWKdYTXrv690Fs7DQwBbZL50\
            WQjajdwlSHL9FzdIfNirRE9zfQRo+F1dKvK1catf+8O37xl0lL28gbdIo74T5e0PpZq\
            zaST1Uy6MB53zWoUZ1ybjrXUTQ6qspYo0RtlHcXzGyGAWhjyR61XkSI0pOfRUYE9My9\
            lODkZ8Jy46pYLMTXILbOr8OKjEgzRCgvAzIBtYmrXXo/Zvz3Vpb90qFGJU8GxmYNboB\
            0e0D0u/5GRSN9FI2j0uQEFllO8CaZ8wsdr+QiaFPRHyg6QyFp4H2vns9CvuhKROcqtZ\
            KGSATMQ3EvyfkemLW2qKi5nUKgHNov6JlU6Ul8JGZAYCmZUSQPGsa/4/HK9MO3lQ6PC\
            xOoZM05DOtFRgv7P5CoAYGlZLSg/0MsWlMVvduVlzhBQ+l0TDjm951v4ZCOULivmRkc\
            Wh93DVVgMoMDEq8paYf99EouXEvN4SmKkvT27ulPos7slIfwuqlkXDpPVAUiAkr+6/s\
            bxeipct6KrazWknIuSTQl+YcPLMmV9rGWVpakNSPAlNw3dw/rvNzrait34X9MuapMuY\
            oPptaujQ/kiS6PFJy93oEvrY2Z391+1rFtfu+/RbIgFxckodrx/f3LO8ac7N/lLNbiS\
            VJuKCJAvgxHfnqGkzJmM0C6vw9fGPIaA743OgdEvhGop5uwovyTKYYcybunP1lS6A+m\
            zeCANI697LmIQkbijJgCo9gO3HOaskvf0i/AcRQNJ/XnA8eWyKapSb/iDEbarfuHL9/\
            nZYVi2X/bot/I1yZq0VRtSTqfPFrSit893TJGoONcBBGdKFasLeSUAFkMkB+fsGy0il\
            1wPvTp2ElGc2haer6eOLoRAvnlqXMYuYt/YNnNEPcW8Tvq+SwaTu5ddzecPaONru4TO\
            ENZb17+OQmKx1GsMmK61cHV/dIW0uQbcYKnR4Fjbxdyoau9CkUvbeicM+G1VFGsXBSV\
            k4X2Yutl0zAcnkv5QTsKPOyxRLWm36efAwK9oU4IJmyiWgm1krbUmWxclopeqRz7MeH\
            ZRlNd2IyehLSj9y8Ma9HnCJSrG1P1K6PbHun6Th4psK13oMrxjHkuzUHj8bkWqwXLvE\
            HpMDAXy9MDExetWutuO3BtIbZ6sXJuLfrJpj/VdhkLetVwPI6jgD5Zx/UAKDq0hvPR6\
            6KSar30ppA7Ebq/59txRoFasLuoBZ3WXdSARECvkSf0jeoJS6fWYmGs9DtRSV9qkb6g\
            J9NXqBktguT0+LyUea9xUTlXL00Vted4BidwsKY4uurdNmg/ekcjL/+chM5vPHD25Va\
            t6XTpOQ7UhX8CX8kecfpGF/1i75xj0ZSsG2lKG4aTK0YrTghov+KBER0o6bVmpBH2OH\
            AypJijX6zjUjTebUznHpHfnsYkoB1rULk/OpFT+koWG2mVLkTpOu6ll3VtbCkWzmXtZ\
            JYe7Oy3KKM6lWD8oywZejEFo5oZ8Cr/Kbsg1n/NqsYYiuSCbzufMYvOZ72qMRRpAzp/\
            mDJbr7OpkQMOeE3X4MR7yum6ltTjUnNA1Eu2Rl3X8sXZn5y1WrG0akqAtPpHjsVLLO9\
            ++YMlusPBXoMTx+mcDU8TdD64s/QHh7JUqP/gPskp32AWKcdVVVr1AUHTCkddUWRTo9\
            aBc+oT/g11tWcGhySC10NOOcXhdZbOelZmYTemMFLYoL7yWgLo0UoF32o6keDVypDfZ\
            CawcAdg60pkzkaEs/GCahRPOB1zP/oNuq+bJ4Nj/w3tYaavCCo0H6h2Ycp3G8S6XWih\
            sgmsUzgt/2bNyoN0DCd5jQ==\",\"QtdUtXGWCuoKd68e8w1CGba2zBPCfZyrL1PW+4\
            cMTGmZTgWkh37nt7cQPArAIwUx+i3xysvYwdZi4RixRw9DYwBuSZ90xLfZs68DDtkRc\
            G90yknJosieIx6B2Kdkrg8lC01+3m8eiqwUqBU+YaZU9VjojXI2SmMZER5Bha0EtzW9\
            zRHWRd3FRrzGnBFhn5s7Iyvped7fgERSwX3QU15ardvssfIYimKpH7nevlrp2til891\
            WqJjdnpLAWJJr8fpcq5XRbLQoHLMlZ0Q4ruWOyZhtiIycKEGFVip4xe+Er41DcX5KKQ\
            beKQugxPrKXSWu0NZFs+QZzCMa2ItP4GsKZ/y4cuHtrVvwluApp8HiCSWt9EzpJzTw/\
            irXv+u4aht1YaJcUM93YRJsJ9lzEGoXRCh4q+OIRqMA6ttP+LXE43LnMBzzsuX9dIim\
            eYtvQoDawI4xf/pyc/3eLLz0u898KzBDhXM03PlvCyn6V0N543GEwywgqNo+Z/i1lTa\
            22ZLLMzycD/ae1XG8xB6P8XAO2Fa4vdHKUd8KI7AwQ8XNyKj2QxPFr7r/Z2b3pyTYj2\
            W3I1bMHOkeirWPOfc31+9vOUITDo44NzrpOD3Sr5RRYOglckc5sdPP0bPy3yM03PG40\
            gsZpdC2FCtXayFDMKWtmUceJC3OvTFt4M1Pv9yxRqTDQW+QK7FQZS30c+PoO1OIAOfb\
            mJpYFCJ6Cd8TQgR4/+dqpNbNey29NbZ8x6w8Iumgh8DdjwqtG2aCfg9FsfOPXLk3emm\
            sibraPYDrFZAEx/BcrWBdFs/QoJY8s/WTeV08S4UzPMydouC3IC8VvLZxwiu9U+z8bv\
            iebCOZu/Q8Ic6Mc3ew95+J525mcFgnuaNgg/K7JgrWFYEZCrhC2buEU1p6/OQRpMCrg\
            jsWTgVGOfUYinvPXY2+pV45mwPCNceNlN7JsLuRfpsv2jlBY0+NaZF1sSYeVp3BQS/4\
            EolCF+v0QmYtrVkyT1nmCXG0ekmbrLPCBdZB2ASPR4WpBT3HdNLLb0APhyPA1fwRw8s\
            HYkqG9fKS8dhfOmRtBicUyHNjn+voetH5gizxAxTuBWx9tMoVxpbsE8gpATxh4rdhJa\
            1Kz7zzxn+MR6PAX5VRsYxxwiGJ4EXYKaelXBhXsbJ1eyhc/dwI4WcZovYP+3sXvGjpn\
            AiPAXPlLU2gnxqch+K1xpXrFPUU7hwQ1y4xrd7Sy1pvnV8LrxvvilaZhalMZLlfNDEc\
            D65fsAyC5X8lHDxL4s7Az/QnqOaAsJfcFVfKr8r5pmWZmCMYn5MwZ78svHLUZ/rmoTC\
            24K6wsgj7PZP62BYiwOPO3NnKFDixhPdIIPX6R7bUVX/LQETtvUxXzA6F0F5XmnH/iM\
            sG78PcmTKxcaw9aEDiuWHq5S93737hyEw4XFHKXYWscp2SrszpozvuqPYv4/NE9lB8D\
            sxd78OL/I2MipXkmBLA3ZU/0tR7sjM4bG34vS6bVlaVU/Qb2pgEzjp3dymdeArOBrXS\
            NSvGmRLgNrBHX1SBtasOSHz2xpdqN+QXxggszsBz7W3HrWZ5VXsozOix7aZrVib/HMQ\
            Yin1Xvq6n7ABXvwYwls0f68SOO80DGFc589dWYpe9MToFY9kXjjlvmzyA4Xrm61nY2c\
            i8+3EE4wpM9qqOXhrLrOAeofGZLtdH+PhF3Hiz0V78tC/dYfkMc3Q4huXqf9OKpZax9\
            VoUJii30bzSo3lCnFW7oE2u0Z698Y3x8OyP3QIv61r6apeeGy30RledAJ4PQNHik2ru\
            2jlw35p1500zK8Vm6bCnwh4r1RY8090jcY0aexxEI33QGw==\",\"XvZhDMceIVt+o0\
            Qpo95K5viP8DjTwLVkbdWI2qmVFM1K2ujq/NVtkg6fwzA1YSULxzt9GpBYE7hSXa0XX\
            m9FlDzZYzyucGbOxKpR4liJWUvyqe48Ga6bY47IbS1LbbiWYYTGOyxzZZha8AxlD8S7\
            GFPmP6//EA/OVQvHuqg2huPbNEwNeCpYqtfB8A7J9COedAzOirIxrBTAGI4jFG5/Dbc\
            ue0DiigOu1OCsbxTr5POAxR7rBZL7iLZwLG99SoCrf5hzvv5r6LwJo7ivRcwT4ToL5n\
            gktr0/ynyck6DCq4+5+ju+3LehzvA4V3BBC/YeqKjMgt2MKREcjUvmZv9quIhLlrqe0\
            eAqPu6oyCXvOYMeCHvPXamJ1f5TE00ld6V3rWVFuRQpzGJe1q4QvZZ1ELVUK2O1qIY6\
            wcvUl8kK5wm47da7hQya+TTMDAXMdHM9mjWz7HENax4/3Fyz8yPrdqG91ZE5JUc09KG\
            4/syRnzC29JpXfj5DhT067ui3Cx2alebdXR6hcQX0BTOxMT6KLsy/fAOkqVHr2LUm72\
            9u3nPakXDoNI593psW+twZ2kb7YBw3tcVhg+uoue01iy7sV88s13yEhvPD1d3KLMpqw\
            9sADlh8n4tpOY9vgKhLUn1zZDBjwd2BKsM7wEk4fG7DXLmV42miQ5p2s2afm1Su9LyS\
            hAGJz0W54+pilOkxPqboIxyPMrfXwSwF7yh4D4Xe3UVyuzjHkl+yoPE488gc+TtZ2ra\
            +/cCRfsDiGjemTaulXxduy7uneQRje8pcVXcysl6uSjiY3+Ja8LvrP27v34nffv5DfL\
            75F0v2lAK3gjvbupTROyvesy5EjeE4y8cc91pXles4sub8AMaxP1ffTCka6SPv8s0ID\
            T0w9jozdu22YW3e2dJYlhN4SoLvITEtTr1WOv/09AiJPTzu2FeN9kuhXM14xf+cAJ4b\
            cvfu2hVtxdva9lB8Xsnte89MVLK1vOKbEwoYO3P1r3bWCe8U79GWERrfTOWOQWOEVCz\
            ndQ/FEShX7i58ZZ1t9UCcYWXKtFLpivfiwx6K5LLX2MCsc3mXhuU0nlDgVjAt/J7n8A\
            3CS5qxJ8H5THY7NuwrBAcsvk/CXGlWKZbKJRze1Zk2veOUOsBa2yM0tG9cvbvXdyzHO\
            eH+8///16tGlvrWLt2rv//7lbbFT60Pzp824sv9a2XvN+qp+cvt+n6z+J/f4sLc/vdt\
            /eNq8fsX8/6nf/7+5+/Pr//3c/dvRVP8snr9p/nxafHm+41687fXqr6v/vftP1fqlzL\
            ++ebL5qH+7X7x/XXfsc+34Xb9a6Pq356KX6pN4mv++bdX//nPf/7zfwMAAP//RsOof4\
            PmAQA=\"]"
        cookies: []
        headers:
          - name: date
            value: Mon, 15 Apr 2024 06:38:54 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-15T06:38:54.227Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: e55782334f198478bb44c6d24bb30c4a
      _order: 0
      cache: {}
      request:
        bodySize: 426
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "426"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6ImdpdGh1Yi5jb20vc291cmNlZ3JhcGgtY2UvTmVNb0AzNTE3NSIsIkRpcmVjdGlvbiI6IiJ9
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 19993
        content:
          encoding: base64
          mimeType: application/json
          size: 19993
          text: "[\"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\
            LyNFKoG0=\",\"27kGHhdPtEeco/NIWySzvAvKFIzSwp3gHsmeO6eWbwcHarh/shZzj\
            H+pdpbLQEhwgHPunp2rbyPTELqlxnv9ndL5IIvtPQKODKD1dseqXUlddvfssBMGcRnf\
            8RHtuSZ0pakAd5QW7hR3SRZWXUFmIEB6JOF3d+waK9uZUrr9UgGP5Ghs6XOSuQacrjZ\
            hZZdua2d6vEKWr+Jio4pta7VZOsgTBngeLl/FxUY5t/fK7ZRbqq8veaDxfstGAuda0a\
            6wplss5JEc9SSdfzjXQL3UWugp4fje4WUM+lU2vy7Vgmd6qKPv2EeGFtbsDQfMAOvCO\
            1Zy34Q2XEojpMfe7j2zz3alL2R9Vy+ODLB3dIeMdrUib0oAarx+71gpdqO8Dkv3uxM5\
            tKvvWSfW+KDqerEfN2EA18k9s9Aa31HnR3FiHG+5p/8ceRAZJ4Y68I65V8ogS0udvQN\
            qaGndMfNKXekga1soSeVGpljgOMfy2VcuDtyWibjtPftbyWVvRiixXXCXVLppF+8WJ3\
            IkX8Z5zG0DdFJYnBhr4uXWQGkb9fvFovW0eA+7Q7L94gW6x+uSznCf4a2KpVtCT4l17\
            h1SPdl77KUTOeq1t3fspWu5VY9q1btVuuCSVQgu2Iq/R1of6qW204EYr9c7ZKvVk17V\
            SplKm6XjfcUE9eM9em9tXdB28WgfqOFKvqMnK2X2jWUrAGAGcN3coQNH8FL5RmJ8Xrr\
            czqt0qOUdsvXE+BTmjrG1tlqsDQ/EOFq/fFWM7MVKBXmXgCMH6GHcsXbHNh6t2/pWcv\
            e7CC44++IOaZ1cS7O4Pw/UONp3x0px+q5wxpken9EsXy8b6Te66Bafcp3p8Tnh/4KEo\
            qWuiKdYQP/yDo29uecUaUNkadzhvW2KpZHTnhL6lHf12OJZV6Ssgzv6SpU7rsBFnBiP\
            43J9slH10sPegRTruXv6zNltt1iygRjPsjtkI4toxEhhnOcOz2jTyUd1V3LXlAMe2eV\
            rVBfaVJJLr41TQyv5HukqQ1fyQuRYl9whnylk67t6qX1ypsd5Lss1ijbrunsql1rzJ3\
            LsBy1fvdqs7apefDx+IscjvLz/Hsp7VvCRGkp3h47Z+n23dHGMtNCqu0eybqWcUWFxS\
            GjCAN+hXr56z01wN0lSLLAWXL5GJo3Iut0sVTY3bLDPtnzsa1kMnuFCOU/k+KRo+Zqu\
            h2KYpXTbxbHACxZ4dS8f91qvnAxUUQdAjf2he6QzlqtuGSfGJ7x3yGYLuTSaP9LCE6N\
            71oatlAlDpdil4p0YYBnv6b1KF401OtilZ1sXLKCFfUdfNlLX1eL970iNzxqWa5nGms\
            qWKxnqxTcULlhgOZfvgg1XZilCie3CO3pv739duoJHWqz3ls86c49BaNL2IF0bZI69C\
            rVeL93UjtTQ17yn59SjUzVXugWRY/mWzznDFSaIUOII7h1S2WbxLYqRFmey3DHb/FKz\
            uafE967ukeppaQLkQIozbO6Y/V29VKENpDj/+x65gjSL0/WO1HiPXz6adrv4MG0gxZp\
            2+aq0RklT2sUH9Wd6OK532MC2Vcao1fLg1IQBvsW8fO71TdxzgehMj+ffPb3oK2X04m\
            E+kuP43h3y7agSURFKHPteLlUr77g0dCDGu9Y9slXKld3iFOozPbZ9l6+K1vpQObXcA\
            J4wwFnyy/Vyax+VW540eiKHttw9M9Bp38h7TPUpBxwpu6MXnV3rsHK6WGx6XrDANtUd\
            M7JzqrVu8Yo+kuM84eX96ORqpUPz60L5TuT4FuDy2ejk8PrO0mO2EzmO1t8lX2mXnjw\
            fiKGldcfcGy5A3pNkM2GAtc0dMnYrpw==\",\"lxoxB2Js3y+3VF1nSrXYwjpS49G9Y\
            +Z1xhe2XTy2R3KcnbS897yslV9btzhRbsIA52Av70NfjMVHybqYCQ74ZtPyNTJpQ6yd\
            bO45IprnhSN+d8yBXnc8yqUG44kcnw8uls+LUu3UQgf+SIz9pzv6TtWqCGqpJXsix/c\
            r7piVujKyXi8Nf5zIsX5cbtl4uw613C++ZHSmx3GGO3qwtUEbruAtIscjfEcPBllsWx\
            mW+slnerx+7+jBIEPnC7ldvMecGeAz8zt6sWvscKi3VMQTPV4pyzVNULVaW6MLaVt11\
            yHNHCfsuSwf+6CatpZh6cifyPG43yOfKZQJ93XnhAXOAr1DznVhnWrsYkN3wgDfvLhH\
            xsXDvMa3Vu6JsAe9+ELyQIpzoe/oLa6ucoQS12pabmuHzq3s0r3uQIxvIy/vsa4OTi6\
            PyZ3I8f2o5Rp6J7t6adeNtPjG2/JR3RVLlVtPic+jl6/MnTJyvbRU44EYRwTv6LFmqS\
            XQU+Ieu0MqJ/9rqVg9KZ75y1fmzrcbtbh00JEa3zy+Y12GTWfKxS7GiRzfNr6j93rNt\
            FS4gRbrjeWSPcqdWju7uHTamR6fDy7XIXtpyqWxgSNxXLbnnEwqH4Q2a0ceR5/QqPWM\
            Smg+iAe5k6LW5F2IKQGSIaOu3ZFlznNtM1RImoz9xodfgvTswdMJjbLx+azxtedeMBi\
            BuE1W822UeJR7Eayo7C//+vMvf/xESTBDBlcEvatutJFt+8taFsGSFSyvSNB+xWvcje\
            vI8M2IxCuSnX+avJSk4e2jvkW2v7XZi8oO7yuJfiF5Tfd7hBTKRfs+OpAVqwYgGPMPf\
            JvWFRuxka6xRpPXdK9IkBx0xd6vThrfbzrKvafrntwSIVn4XEIXhB+fThJr68RGFls5\
            vJVZcMOD6KHOZiX8um/VD4XTLbU=\",\"WidoqCdYnd1JUXFK+4BEo0LHxHeyctIEMT\
            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\",\"JnhNATw/wjMalfJhfe\
            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\
            \",\"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\",\
            \"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\
            FKqYy4Ty+Rg==\",\"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\
            rcm8r3jD3v9aCeP8uRofvz+aNUevsTpfKiQ==\",\"Y/13Io8YU4MIPeEVzvD2Oqg33\
            z791xK5TrQgh4OIdQblvXKSsOTOSLADMbYNU1sT1tH8lnoHrGfxS8aZ9TU+1vp3zD57\
            rED8UpY7aQpVisr2Y1c52TTaVMM93pRIHBNw2pp+4+ncxHabjItdguN24NfvH5n8kDO\
            7+lHuvVBNG/ZUlTxAGR81Ij524vt9I9MHaVdo4Lem3zKf8nq25o/WGMK7ilAhSZK188\
            59a6qulk4UtmmtUSZtsSJSZAs8582W8Wn8ZAbRLUHcUyLqF5zZdcE2o0Gu3iiqVDCkB\
            X54utbpHGeybDoiRdm2j0xVuRPzlQxjnSVTKS8Knddf89RA46XrIkV4H34VujLWJY8m\
            OCYoksVrhNsm8nRkjD4eoXj+/g2TCX9uwXXJBJZLcFxLE9GRE6tClmUyhnCFBi1n7A+\
            FLJVJp0Pd4EE8e8uv9WLMdBL0+4yAEvRHhpVTbKTL2B8OcNAbXGXpCUNVbLtklP0Gjy\
            XI2ZUKW6rx3IQX4kwCRiFt6U4Y+sZ64dPO6RwJigfzWrUsxwxmKmskQgUs7/QJ44nnO\
            7XWRgdV77/u2wxz4ZoOnHin62mdv7BfdpP/g++aa0I4ZxmvfcK6re1+oVQ3pGDU0t7x\
            mXGmHLjt8dXmnHVcajc8abEXjzpshG+ZNP4ENZDuwz5Lz5XGF27fBkGVZ4+RIY8xWbP\
            lvE5soaQT75TfBsur3isyPJuJiM/5I23hdeD35CM+Om+ZrOgzN9dpXseMaKD1M/yR99\
            Lv30n3mA4Pz5HgqGjO3FSmsMNTRFkW/iUV0CEZPaLMRppifA0lQ5AJEToFpl5QOLN1e\
            jsa3Tvt9UrXOvDrdpYYeLHpk9Qz61Dw03UAIy32nLVS13KlbZ2MEt/gsQQ5o7LWnqni\
            dIOHEjBVuU8cKx1ay4/AAQ6iWxl7bDoFZwrFGjqn1ysrSr1OJkfc4LEEObv7gaNoe58\
            4V44DFZ6FedKki/legmFPMNkp02968Nb4YqMa3k6/pMLSZK0GyyRJXcPxaszrjXaj07\
            dwbvBxS+rrh9dZlt3hpReRNRYHCixF5voYePK6+UwBpcjyS448k5kJMxRYisw5OfDMU\
            NInCrwy8uYFmWk1QwHsyww/urLBSW1yIsoTErRGn7I8s+GvX2uhTKUNb+ZfkWGdkTUy\
            ri1EJYN6lLxFd0EU9zyIO94nlhtZ2gz/6wAHlnaGFakbkU5BuELDuHPWCn0o+c/usXh\
            V5szFfhN0bZF8JPCWAMlAZc9dsBw3YiKHK0IFxuL9U5Y02995upTJPBGQ5QOVn3PB9t\
            G6rd/YVoQ13zk3hChen8zEPrOV64zD9RGNWuajjgOvw5VL0dZyXznbpV+ATNIj6fgI0\
            sjdB6dk40Uji402StRKuqE8Z/50IvnBeFyWpbJV+5X0ShS1Vuk6vDEysE9n7ANbm35G\
            /RIM9oCMs7Btt1LOqJAzUGcS4NGmM2tnGAptKqcykjdmSMF4ZMrk243KOE2ekGA7JWe\
            vqnWGgzeA8R6V1bbljcYeC/aAL3k5RbUNQYq1ztEfUxrYB1k6ovZ6Tdx6usFjCXL2w4\
            Fjv/ETzzbOE8Vn40OR58800m1L+5iuYjpDAXRFRtZAsy1U+sLtNRydjibfozozs8YKZ\
            4uMI/sJCfj+jLP6Zk9kwl6hwVz8+SlrNRhZqDp99/cGjyXImYEHjuSdwBgZlidndR4Z\
            H94tyBboSIdt+RzdaeQu7xDnRIBOFpMZ/2d2XVHrdDnNGzzwpzP2bbtligpfw8F8KPg\
            vt9t0MfJLMLDhMmzHz60y77Rc1ZZ3aac0KOOU147WFRvlw3ANVBhbqvTLmQ==\",\"k\
            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\
            Ei5Euprd90TbS2wA==\",\"LQy19x3o4QMjUzqrSw==\",\"IbsQSbKbA+JvjPovV6y\
            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\
            cQvSyECHJsiZXiQRqfMsisobjc5ky+YsX0+heNYTXKsnV6vEwbKEYNjHKkvHYuNDzkE\
            bdUOoQscdpwlwJm/SRnKtX9TyISvfUZhjzG1Xjeq1jbR1AjBsc3U3B2ZpNKfzigcOSB\
            b89t9GXuyYhYJtXByB90oZ2O1/S8hcA8lxqxncn6IhGhxAoa5y0ldcMkuGWOYgcNdNe\
            k5bGyjVk49irZb1anOvsJiXyI5utZFCwddQnA7qdH9c7f6Hycb9WgdDjJcAPGtsGSvd\
            n4jgsRm2QmEbfhkW/sWm5kDAOcCJNf/vlUuFUY4gXC+cGq8tFJK+LYRO1vImrzkFiX6\
            z//9zYtWVuqDWdsXf/j3C2XKP3bOW3ct3o+fXhfm0654aP/rw/bTbvXnn8JKf/jth+a\
            7zeofP+q//vEv//j5H0+v//VD/1vZln/avP5Zf/ewevNqV7z9/3bln+pG/fD79l//+K\
            n+6z8/Pa5+eP1m9ebTZvXnj6H880+vVm//0v78j6fvPz5Xrz69+9jzey//+Zf657d/b\
            1dvvtWf9Qe97pfMf/7zn//8vwAAAP//7inTaSEHAgA=\"]"
        cookies: []
        headers:
          - name: date
            value: Mon, 15 Apr 2024 06:38:54 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-15T06:38:54.554Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: a94897c759f1de78a244479bc118f768
      _order: 0
      cache: {}
      request:
        bodySize: 446
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "446"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6ImdpdGh1Yi5jb20vc3BvdGlmeS9pZWVlLXNwbS12b2NhbHMtdHV0b3JpYWxAMzg0NDMiLCJEaXJlY3Rpb24iOiIifQ==
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 21160
        content:
          encoding: base64
          mimeType: application/json
          size: 21160
          text: "[\"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\
            0FeSu/gDsWulY=\",\"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\
            0aooQ3Q+fejpBoJXfrhm2ku7ASp3BGArgmU=\",\"eBUiGNPTd+z3YR3wLrroMke1bi\
            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\
            lntnzT5oWtdr8fuYs90fVuCem\",\"gzBhYVRmiQbZnfbODmMzOmf4ozpFiedHvp1Zq\
            +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\
            z95VrspfNqNfyZ77FbDJaUm7kuuOhK2Xg=\",\"dT6ZwEGJ2Va/4HS8AbEwLm37clgs\
            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\"]"
        cookies: []
        headers:
          - name: date
            value: Mon, 15 Apr 2024 06:38:55 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-15T06:38:55.012Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 129c79e0aead66900aa0e4c6ae5a07d8
      _order: 0
      cache: {}
      request:
        bodySize: 446
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "446"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6Im1hdmVuL2NvbS5kYXRhc3RheC5zdGFyZ2F0ZS9zdGFyZ2F0ZS1zZGstcmVzdEAzNjg2MSIsIkRpcmVjdGlvbiI6IiJ9
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 22469
        content:
          encoding: base64
          mimeType: application/json
          size: 22469
          text: "[\"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\
            8=\",\"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\
            XRcq3BiaJoJ6HHvnVU=\",\"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\
            iujkWvngTgVvZwk50wy4FIiWRkMusJhHHqg=\",\"SWwvD6NeTtdPCbi7oLQKkSXOZ2\
            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\
            8Y//HwAA//9CEfKwqRYCAA==\"]"
        cookies: []
        headers:
          - name: date
            value: Mon, 15 Apr 2024 06:38:55 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-15T06:38:55.403Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 58ee53ac7254d32ca29803b1847e1846
      _order: 0
      cache: {}
      request:
        bodySize: 466
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "466"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6Im1hdmVuL2lvLnF1YXJrdXMvcXVhcmt1cy1oaWJlcm5hdGUtcmVhY3RpdmUtcGFuYWNoZS1jb21tb25AMzU3NzkiLCJEaXJlY3Rpb24iOiIifQ==
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 21400
        content:
          encoding: base64
          mimeType: application/json
          size: 21400
          text: "[\"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\
            AL3OolD5vNN9PEJa8Yx4Lgn49UVuhxME\",\"Vk+QRhwb1gf4NgKmU1EjuXFPCTz+Yj\
            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\",\"3V4AM6H8mhpKj\
            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\
            \",\"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\
            rWs8ItNiDHmsQ7EM=\",\"m4s2p12hL+n4g+zYQnmxZsF+5UHP6kA/J3ixZny7TKPnj\
            RHbovUSe4qoAUFIUOuAtpyWddTelf5gXqzZe3ywffF3OeIdAOlIx7p3Eam9lVtdJHjH\
            M6RHc/bASm5rRFvlmRQ1PyHeS0N6ugeqy1z5LljyQA6sDmZFR8BuWF4U6rjJZW1TZ/R\
            Z+rNfOBY0+iVzgB+gJ+0KVaX9V4K2nLE8KK+BXlFhUIclibbBeEapKTuaRYy21GxvSo\
            xmc0asE1dzEDTdtoQyA932ZHYdBT9sCiSP1Ajiw74eaS0jdwVxqgrH8u//85sPtdjL7\
            6ud/vDHf32QVf6fjbHaLFX7+YeXrPrhnB3r331/+uG8/dv/uq36/rffl98dtv/4Wf3X\
            f/6///jlH9eXf/5P++zlkJf/2/zX6x9u/7x99/bP/++/VVb+P/W2+tKI1z983P61aP7\
            r1Z3zv17rrXq5/fMf/7T//McPH3/885dPP/z5Ly/fq4v6778Wt/aZ+Mcfmu+PWn1fff\
            yPD//+97///X8DAAD///TZGJ9JFwIA\"]"
        cookies: []
        headers:
          - name: date
            value: Mon, 15 Apr 2024 06:38:56 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-15T06:38:55.744Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 64f25d6e59797335ca4d1cb60d648276
      _order: 0
      cache: {}
      request:
        bodySize: 442
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "442"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6Im1hdmVuL29yZy5qZXRicmFpbnMua290bGluL2tvdGxpbi1yZWZsZWN0QDM3NDE1IiwiRGlyZWN0aW9uIjoiIn0=
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 12958
        content:
          encoding: base64
          mimeType: application/json
          size: 12958
          text: "[\"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\
            8Q5OLek+sVan0=\",\"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\
            XhnnA5VLc4ApPdYg3FK1rqOlT2mx3wUll8I=\",\"FqKWQvHYzI+XA46ywjVwixlpCp\
            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\
            qGY9m58IvmPzjWC6iLoYxtwmZ/akimz8OpeJiNHuNO+biWa3KPRiJVkl1Lrmat0Itdj\
            yA5eFFPn4cKtEJBfKcnpPaGt2i35RzLLQVc0Nz+3JOl5l1jVLfz4qhgXr4fHwAChxRl\
            4kF+rLvVnoRj2LuublotDVYsvd0jCh7HBXlM3fFfzHppodwhXJhdYbedf4BXDXwj2Jk\
            s+6yVg2FBe9J4cGgH1ddgwL1MPXWwVA/7d2UsxWRsUx4TpKt8lP3Ky0Kfh75fjadIny\
            RMV8CNivPTE2IMP3MjaGBa+g8+lhh9NbuXN5UfNhS8xMNkGG5D14o9w1kBLW9TcKVsK\
            Y+S3nmBjJ9raWAzc7rrJjzdxm8uVWLk2Ioql3h8TBlvJpO3zM5Ex+hGtmfDPiI5Ns+H\
            uLfP0TxvXofOSm4Hb4eF/VM0+cE8C3pj4/GCEq+VPnSe9+ej8bOHlpKEmnD887b1bwW\
            Ml2GGTPDzMxMwJgsU/ekcQMIvNcfOEnQqMz7576YyW5KoYPj4yrH1GteHfTHStZN1KO\
            nx70yc+41j0t8FjXb7o/M+TzD1hnhPl7Ne9jpj/i/U0T36mN2DPHh/uIS17pbC1ctxZ\
            9vSj5PjfdTfGse+WrdMm3NmP11UDkXoA//t9fXtVszd+rlX713X9ecVX+rTFWm1u1P3\
            98KNTHfbGtv32/+7hf/v0XtxTvv3lfvd0sf/0s/vG3H3/98uvx4bf/8/6b9+qvJ/bv3\
            zblD5/dl8fjvvz1k/vth1/c8vSg2L9/tl9+fd8Uj0Xz2w+/PP7jzY/75ZtP++Lxf7ni\
            h6P8x69v97/98MvX4vSwKf7+13cfntfPH//7U4v/Pfv3j/LLm5/r5eOT+Kd4L1ZtMPn\
            jjz/++P8BAAD//7IX9uy1OQEA\"]"
        cookies: []
        headers:
          - name: date
            value: Mon, 15 Apr 2024 06:38:56 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: content-encoding
            value: gzip
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-15T06:38:56.014Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: c158280ec992ae8c316832baea8cc00c
      _order: 0
      cache: {}
      request:
        bodySize: 462
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "462"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - name: host
            value: demo.sourcegraph.com
        headersSize: 382
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |
              
              query Repositories($first: Int!, $after: String) {
                  repositories(first: $first, after: $after) {
                      nodes {
                          id
                          name
                          url
                      }
                      pageInfo {
                          endCursor
                      }
                  }
              }
            variables:
              after: UmVwb3NpdG9yeUN1cnNvcjp7IkNvbHVtbiI6Im5hbWUiLCJWYWx1ZSI6InByaXZhdGUtY2xvdWQtZGVtby1naXRsYWIuc2cuZGV2L3Jvb3Qvc2FtcGxlLW5vZGVqcy1hcHBAMzgzNDQiLCJEaXJlY3Rpb24iOiIifQ==
              first: 10000
        queryString:
          - name: Repositories
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repositories
      response:
        bodySize: 120
        content:
          encoding: base64
          mimeType: application/json
          size: 120
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSi3IL84syS/KTC0G8fPyU0CM6FgdpYLE9FTPvLR8k\
            HBqXopzaVFxfpGSVV5pTk5tbW0tAAAA//8DAMaaQ15EAAAA\"]"
          textDecoded:
            data:
              repositories:
                nodes: []
                pageInfo:
                  endCursor: null
        cookies: []
        headers:
          - name: date
            value: Mon, 15 Apr 2024 06:38:56 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: keep-alive
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1248
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-04-15T06:38:56.266Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 545488e46dbd4527dead77e98259e9ba
      _order: 0
      cache: {}
      request:
        bodySize: 144
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "144"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 326
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query Repository($name: String!) {
              	repository(name: $name) {
              		id
              	}
              }
            variables:
              name: github.com/sourcegraph/cody
        queryString:
          - name: Repository
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repository
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1212
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-03-06T08:51:30.948Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: df5425b2424971cf9d052eec9b4bcf30
      _order: 0
      cache: {}
      request:
        bodySize: 144
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "144"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 337
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query Repository($name: String!) {
              	repository(name: $name) {
              		id
              	}
              }
            variables:
              name: github.com/sourcegraph/cody
        queryString:
          - name: Repository
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?Repository
      response:
        bodySize: 112
        content:
          encoding: base64
          mimeType: application/json
          size: 112
          text: "[\"H4sIAAAAAAAAA6pWSkksSVSyqlYqSi3IL84syS+qBPEyU5SslEJzw8qTjP0KUtwtK1ND8\
            qv8qjyNfANtbZVqa2sBAAAA//8DACmyIHw5AAAA\"]"
          textDecoded:
            data:
              repository:
                id: UmVwb3NpdG9yeTozNzI2MQ==
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:32 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:32.200Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: ad724b1d99cd03b5ca781ef8a218294c
      _order: 0
      cache: {}
      request:
        bodySize: 141
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "141"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 344
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteGraphQLFields {
                  __type(name: "Site") {
                      fields {
                          name
                      }
                  }
              }
            variables: {}
        queryString:
          - name: SiteGraphQLFields
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteGraphQLFields
      response:
        bodySize: 591
        content:
          encoding: base64
          mimeType: application/json
          size: 591
          text: "[\"H4sIAAAAAAAAA3yS0Y7aQAxF/yXP/QLeVilUK1GphWX7UFUrM74Eaycz6dgDGyH+vRroV\
            kzE9i3xvXF8j31qmIya2al5ebFxQHnaCTxrM/t5agL1aGY=\",\"jXBz/vTvTcXw+Pm\
            24mLYSZcTmcRwK3gyqK1hJqHTqsnfWkvqiHFP2qyW1U8orOAj8Vqs8h8ER6SWwgP3Ek\
            QN6VYm56D6FF8Rqgko2/5bigdhpErAmyEF8g/OxRys0rZZPD8j6STokCJnZ3eUPDAZ2\
            j3c6205AKwrDFHFYhrbjwi+D7NGOoiDLlLsF+IrAOR9PM5ZbD4x/xDbT827BGwUSedv\
            DmBw3QmpDrwnbSPjMRi8lw7BTXYVWOc9iX9Gkp24S4BLQe/wWeetuiTDNGVW6rA2MlE\
            TV68pkB+nxayTnfUxFI4Sug+6FETlcN5vseCqWw5dIsYKxBKg01OJm6s+D7T1NbQBqQ\
            BtYz94lGT6PUejuxbG/2wJv7Mk6JUl+MJxEct3461Pyk7GO6O4yONy+fXDayr6VVyAL\
            CfoVP1ChiONKzIspRcrOLM251/n8/kPAAAA//8DANaF7gAtBAAA\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.356Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: e2304ad643386d8500a41a21d240755f
      _order: 0
      cache: {}
      request:
        bodySize: 100
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "100"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 345
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteHasCodyEnabled {
                  site {
                      isCodyEnabled
                  }
              }
            variables: {}
        queryString:
          - name: SiteHasCodyEnabled
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteHasCodyEnabled
      response:
        bodySize: 40
        content:
          mimeType: application/json
          size: 40
          text: "{\"data\":{\"site\":{\"isCodyEnabled\":true}}}"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: content-length
            value: "40"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1211
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.562Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 1b42d5288f9bce898af91a9766d70aba
      _order: 0
      cache: {}
      request:
        bodySize: 164
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "164"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 272
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteIdentification {
              	site {
              		siteID
              		productSubscription {
              			license {
              				hashedKey
              			}
              		}
              	}
              }
            variables: {}
        queryString:
          - name: SiteIdentification
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteIdentification
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1212
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-03-06T08:51:30.832Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: f005ccace6369a09527f0fa2dc44f267
      _order: 0
      cache: {}
      request:
        bodySize: 164
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "164"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 345
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteIdentification {
              	site {
              		siteID
              		productSubscription {
              			license {
              				hashedKey
              			}
              		}
              	}
              }
            variables: {}
        queryString:
          - name: SiteIdentification
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteIdentification
      response:
        bodySize: 235
        content:
          encoding: base64
          mimeType: application/json
          size: 235
          text: "[\"H4sIAAAAAAAAAzTMsQrDIBCA4Xe5uYIaPTVzl9KxT3A5TyKUJFQzlNB3Lyn0X/7tOyBTJ\
            xgPaLXL/7crjBBj8tkTKwzIygmxmhI6FT0bjIGMLRousL3W\",\"vHN/7FPjV916XZe\
            TeVaWpf3Emdos+S5vGAFDIs25IA1Mk3PJR6HBBmJEF4OYmJwwmuBtKFannJK3woMtmL\
            WUCT5nXwAAAP//AwA4XaGTtgAAAA==\"]"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:32 GMT
          - name: content-type
            value: application/json
          - name: transfer-encoding
            value: chunked
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
          - name: content-encoding
            value: gzip
        headersSize: 1243
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:32.008Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: 2f61c4440220a7c49cbf07315e5225db
      _order: 0
      cache: {}
      request:
        bodySize: 101
        cookies: []
        headers:
          - _fromType: array
            name: authorization
            value: token
              REDACTED_b20717265e7ab1d132874d8ff0be053ab9c1dacccec8dce0bbba76888b6a0a69
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "101"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 345
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteProductVersion {
                  site {
                      productVersion
                  }
              }
            variables: {}
        queryString:
          - name: SiteProductVersion
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteProductVersion
      response:
        bodySize: 44
        content:
          mimeType: application/json
          size: 44
          text: "{\"data\":{\"site\":{\"productVersion\":\"5.3.1\"}}}"
        cookies: []
        headers:
          - name: date
            value: Wed, 06 Mar 2024 08:51:31 GMT
          - name: content-type
            value: application/json
          - name: content-length
            value: "44"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With,
              Cookie
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1211
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 200
        statusText: OK
      startedDateTime: 2024-03-06T08:51:31.146Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
    - _id: ad22e9eaa01bebade8a4333120346c0f
      _order: 0
      cache: {}
      request:
        bodySize: 101
        cookies: []
        headers:
          - _fromType: array
            name: content-type
            value: application/json; charset=utf-8
          - _fromType: array
            name: user-agent
            value: enterpriseClient / v1
          - _fromType: array
            name: x-sourcegraph-actor-anonymous-uid
            value: enterpriseClientabcde1234
          - _fromType: array
            name: accept
            value: "*/*"
          - _fromType: array
            name: content-length
            value: "101"
          - _fromType: array
            name: accept-encoding
            value: gzip,deflate
          - _fromType: array
            name: connection
            value: close
          - name: host
            value: demo.sourcegraph.com
        headersSize: 334
        httpVersion: HTTP/1.1
        method: POST
        postData:
          mimeType: application/json; charset=utf-8
          params: []
          textJSON:
            query: |-
              
              query SiteProductVersion {
                  site {
                      productVersion
                  }
              }
            variables: {}
        queryString:
          - name: SiteProductVersion
            value: null
        url: https://demo.sourcegraph.com/.api/graphql?SiteProductVersion
      response:
        bodySize: 38
        content:
          mimeType: text/plain; charset=utf-8
          size: 38
          text: |
            Private mode requires authentication.
        cookies: []
        headers:
          - name: date
            value: Thu, 07 Mar 2024 00:09:37 GMT
          - name: content-type
            value: text/plain; charset=utf-8
          - name: content-length
            value: "38"
          - name: connection
            value: close
          - name: access-control-allow-credentials
            value: "true"
          - name: access-control-allow-origin
            value: ""
          - name: cache-control
            value: no-cache, max-age=0
          - name: vary
            value: Accept-Encoding, Authorization, Cookie, Authorization, X-Requested-With
          - name: x-content-type-options
            value: nosniff
          - name: x-frame-options
            value: DENY
          - name: x-xss-protection
            value: 1; mode=block
          - name: strict-transport-security
            value: max-age=31536000; includeSubDomains; preload
        headersSize: 1212
        httpVersion: HTTP/1.1
        redirectURL: ""
        status: 401
        statusText: Unauthorized
      startedDateTime: 2024-03-07T00:09:37.302Z
      time: 0
      timings:
        blocked: -1
        connect: -1
        dns: -1
        receive: 0
        send: 0
        ssl: -1
        wait: 0
  pages: []
  version: "1.2"
